name: Fork Template Repo (App Token)

on:
  workflow_dispatch:
    inputs:
      template_repo:
        description: 'Template repository to fork (e.g. owner/template-repo)'
        required: true
        default: 'devwithkrishna/enable-codeql-analysis-for-repositories'
      target_owner:
        description: 'Target org where GitHub App is installed'
        required: true
        default: 'devwithkrishna'
      new_repo_name:
        description: 'New name for the forked repository'
        required: true
        default: 'new-forked-repo'
      is_private:
        description: 'Make the new repo private? (true/false)'
        required: false
        default: 'true'

jobs:
  fork:
    runs-on: ubuntu-latest

    steps:

    - name: Fork the template repository using GitHub App Token
      env:
        GH_APP_TOKEN: ${{ secrets.DEVWITHKRISHNA_PERSONAL_ACCESS_TOKEN }}
        TEMPLATE_REPO: ${{ github.event.inputs.template_repo }}
        TARGET_OWNER: ${{ github.event.inputs.target_owner }}
        NEW_REPO_NAME: ${{ github.event.inputs.new_repo_name }}
        IS_PRIVATE: ${{ github.event.inputs.is_private }}
      run: |
        echo "Forking $TEMPLATE_REPO into $TARGET_OWNER/$NEW_REPO_NAME..."

        RESPONSE=$(curl -s -X POST "https://api.github.com/repos/$TEMPLATE_REPO/forks" \
          -H "Authorization: Bearer $GH_APP_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          -d "{\"organization\": \"$TARGET_OWNER\", \"name\": \"$NEW_REPO_NAME\"}")

        echo "Response: $RESPONSE"

        REPO_URL=$(echo "$RESPONSE" | jq -r '.html_url')

        if [[ "$REPO_URL" == "null" ]]; then
          echo "❌ Failed to create fork. Response:"
          echo "$RESPONSE"
          exit 1
        fi

        echo "✅ Successfully forked: $REPO_URL"

    - name: Make repo private if required
      if: ${{ github.event.inputs.is_private == 'true' }}
      env:
        GH_APP_TOKEN: ${{ secrets.GH_APP_TOKEN }}
        TARGET_OWNER: ${{ github.event.inputs.target_owner }}
        NEW_REPO_NAME: ${{ github.event.inputs.new_repo_name }}
      run: |
        echo "Setting repository visibility to private..."
        curl -s -X PATCH "https://api.github.com/repos/$TARGET_OWNER/$NEW_REPO_NAME" \
          -H "Authorization: Bearer $GH_APP_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          -d '{"private": true}'
